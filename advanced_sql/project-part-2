-- 1

SELECT DATE_TRUNC('month', creation_date)::date AS mnth,
       SUM(views_count)
FROM stackoverflow.posts
GROUP BY DATE_TRUNC('month', creation_date)
ORDER BY SUM(views_count) DESC;

--- 2
SELECT u.display_name,
       COUNT(DISTINCT p.user_id)
FROM stackoverflow.posts AS p
JOIN stackoverflow.users AS u ON p.user_id=u.id
JOIN stackoverflow.post_types AS pt ON pt.id=p.post_type_id
WHERE p.creation_date::date BETWEEN u.creation_date::date AND (u.creation_date::date + INTERVAL '1 month')
      AND pt.type LIKE '%Answer%'
GROUP BY u.display_name
HAVING COUNT(p.id) > 100
ORDER BY u.display_name;


--- 3
WITH users AS (SELECT u.id
               FROM stackoverflow.posts AS p
               JOIN stackoverflow.users AS u ON p.user_id=u.id
               WHERE DATE_TRUNC('month', u.creation_date)::date = '2008-09-01'
               AND DATE_TRUNC('month', p.creation_date)::date = '2008-12-01'
               GROUP BY u.id
               HAVING COUNT(p.id) > 0)

SELECT COUNT(p.id),
DATE_TRUNC('month', p.creation_date)::date
FROM stackoverflow.posts AS p
WHERE p.user_id IN (SELECT *  FROM users)
 AND DATE_TRUNC('year', p.creation_date)::date = '2008-01-01'
GROUP BY DATE_TRUNC('month', p.creation_date)::date
ORDER BY DATE_TRUNC('month', p.creation_date)::date DESC;



---- 4
SELECT p.user_id,
       p.creation_date,
       p.views_count,
       SUM(p.views_count) OVER (PARTITION BY p.user_id ORDER BY p.creation_date)
FROM stackoverflow.posts p;

--- 5
WITH ad AS (SELECT p.user_id AS userid,
                   COUNT(DISTINCT p.creation_date::date)  AS cnt
            FROM stackoverflow.posts p
            WHERE p.creation_date::date BETWEEN '2008-12-01' AND '2008-12-07'
            GROUP BY p.user_id)
SELECT ROUND(AVG(ad.cnt))
FROM ad;


-------- 6
--
--На сколько процентов менялось количество постов ежемесячно с 1 сентября по 31 декабря 2008 года? Отобразите таблицу со следующими полями:
--Номер месяца.
--Количество постов за месяц.
--Процент, который показывает, насколько изменилось количество постов в текущем месяце по сравнению с предыдущим.
--Если постов стало меньше, значение процента должно быть отрицательным, если больше — положительным. Округлите значение процента до двух знаков после запятой.
--Напомним, что при делении одного целого числа на другое в PostgreSQL в результате получится целое число, округлённое до ближайшего целого вниз. Чтобы этого избежать, переведите делимое в тип numeric.
WITH month_post AS (SELECT EXTRACT(MONTH from p.creation_date::date) AS post_month,
                    COUNT(DISTINCT p.id)
                    FROM stackoverflow.posts p
                    WHERE p.creation_date::date BETWEEN '2008-09-01' AND '2008-12-31'
                    GROUP BY post_month)
SELECT *,
       ROUND(((count::numeric / LAG(count) OVER (ORDER BY post_month)) - 1) * 100, 2) AS user_growth
FROM month_post;

----------7
WITH user_post AS (SELECT user_id,
                   COUNT(DISTINCT id) AS cnt
                   FROM stackoverflow.posts
                   GROUP BY user_id
                   ORDER BY cnt DESC
                   LIMIT 1),
     dtt AS (SELECT p.user_id,
             p.creation_date,
             extract('week' from p.creation_date) AS week_number
             FROM stackoverflow.posts AS p
             JOIN user_post ON user_post.user_id = p.user_id
             WHERE DATE_TRUNC('month', p.creation_date)::date = '2008-10-01')
SELECT DISTINCT week_number::numeric,
       MAX(creation_date) OVER (PARTITION BY week_number) AS post_dt
FROM dtt
ORDER BY week_number;